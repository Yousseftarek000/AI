sequenceDiagram
    participant U as User
    participant FE as Frontend
    participant API as API Gateway
    participant AUTH as AuthService
    participant PROJECT as ProjectService
    participant AI as AIService
    participant VIDEO as VideoProcessor
    participant STORAGE as FileStorage
    participant EXPORT as ExportManager
    participant ANALYTICS as AnalyticsTracker

    %% User Authentication Flow
    U->>FE: Access platform
    FE->>API: GET /auth/status
    API->>AUTH: verify_session(token)
    AUTH-->>API: user_data
    API-->>FE: authenticated_user
    FE-->>U: Display dashboard

    %% Project Creation Flow
    U->>FE: Click "Create New Video"
    FE->>FE: Show creation options (AI Generate / Template)
    
    %% AI Generation Path
    U->>FE: Select "AI Generate" + Enter prompt
    FE->>API: POST /projects/create-ai
    API->>PROJECT: create_project(user_id, type="ai_generated")
    PROJECT->>PROJECT: __init__(user_id, title, type)
    PROJECT-->>API: project_id
    
    API->>AI: generate_video(prompt, style_options)
    AI->>AI: check_rate_limit()
    AI->>AI: create_from_text(prompt, style)
    AI-->>API: video_generation_result
    
    API->>PROJECT: add_generated_scenes(project_id, scenes)
    PROJECT->>ANALYTICS: track_video_creation(user_id, project_id)
    API-->>FE: project_data
    FE-->>U: Display generated video preview

    %% Template-Based Creation Path
    U->>FE: Select "Browse Templates"
    FE->>API: GET /templates?category=trending
    API->>PROJECT: get_templates(filters)
    API-->>FE: template_list
    FE-->>U: Display template gallery
    
    U->>FE: Select template
    FE->>API: POST /projects/create-from-template
    API->>PROJECT: create_project(user_id, type="template_based")
    API->>PROJECT: apply_template(project_id, template_id)
    PROJECT->>PROJECT: clone_template_assets()
    API-->>FE: project_with_template
    FE-->>U: Display editable project

    %% Real-time Editing Flow
    U->>FE: Make edit (add text, change scene)
    FE->>API: WebSocket: project_change_event
    API->>PROJECT: update_project(project_id, changes)
    PROJECT->>PROJECT: validate_changes()
    PROJECT->>PROJECT: apply_changes()
    API->>API: broadcast_to_collaborators(project_id, changes)
    API-->>FE: WebSocket: change_applied
    FE-->>U: Update preview in real-time

    %% AI Caption & Hashtag Generation
    U->>FE: Click "Generate Captions"
    FE->>API: POST /ai/generate-captions
    API->>AI: generate_caption(project_content, style="viral")
    AI->>AI: optimize_for_engagement(caption)
    AI-->>API: optimized_caption
    
    API->>AI: generate_hashtags(content, niche, count=30)
    AI->>AI: analyze_trending_tags(category)
    AI->>AI: optimize_reach(hashtags)
    AI-->>API: hashtag_list
    
    API-->>FE: captions_and_hashtags
    FE-->>U: Display generated content

    %% Video Processing & Export
    U->>FE: Click "Export for Instagram"
    FE->>API: POST /export/instagram
    API->>EXPORT: export_to_instagram_format(project_id)
    
    EXPORT->>PROJECT: get_project_scenes(project_id)
    PROJECT-->>EXPORT: scene_list
    
    EXPORT->>VIDEO: render_video(scenes, format="instagram_reels")
    VIDEO->>VIDEO: optimize_for_instagram(video_data)
    VIDEO->>VIDEO: add_subtitles(video, captions)
    VIDEO-->>EXPORT: rendered_video
    
    EXPORT->>STORAGE: upload_file(video_data, export_path)
    STORAGE-->>EXPORT: file_url
    
    EXPORT->>ANALYTICS: track_export(user_id, project_id, "instagram")
    EXPORT-->>API: export_result
    API-->>FE: download_url
    FE-->>U: Display download link + share options

    %% Batch Processing Flow
    U->>FE: Select multiple projects for batch export
    FE->>API: POST /export/batch
    API->>EXPORT: batch_export(project_ids, formats)
    
    loop For each project
        EXPORT->>PROJECT: get_project_data(project_id)
        EXPORT->>VIDEO: render_video(scenes, format)
        EXPORT->>STORAGE: upload_file(video, path)
    end
    
    EXPORT-->>API: batch_results
    API-->>FE: WebSocket: batch_complete
    FE-->>U: Notify batch completion

    %% Analytics & Performance Tracking
    ANALYTICS->>ANALYTICS: aggregate_daily_metrics()
    ANALYTICS->>ANALYTICS: analyze_viral_performance()
    ANALYTICS->>API: send_performance_insights()
    API->>FE: WebSocket: analytics_update
    FE-->>U: Display usage insights